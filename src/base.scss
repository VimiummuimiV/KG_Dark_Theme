@import "./data/variables";

// Configuration Maps
$rang-colors: (
  1: $rang1,
  2: $rang2,
  3: $rang3,
  4: $rang4,
  5: $rang5,
  6: $rang6,
  7: $rang7,
  8: $rang8,
  9: $rang9,
);

$awards: (
  1: (
    $medal-award,
    "awards",
  ),
  2: (
    $star-award,
    "10px 0",
  ),
  3: (
    $trophy-award,
    "20px 0",
  ),
  4: (
    $crown-award,
    "30px 0",
  ),
  5: (
    $gold-helmet-award,
    "40px 0",
  ),
  6: (
    $platinum-helmet-award,
    "50px 0",
  ),
  7: (
    $black-helmet-award,
    "60px 0",
  ),
  8: (
    $wheel-award,
    "70px 0",
  ),
  "1b": (
    $bronze-book-award,
    "80px 0",
  ),
  "2b": (
    $silver-book-award,
    "90px 0",
  ),
  "3b": (
    $gold-book-award,
    "100px 0",
  ),
);

// Mixins
@mixin reset-styles {
  box-shadow: none !important;
  text-shadow: none !important;
}

@mixin button-base {
  font-weight: normal !important;
  border: none !important;
  border-radius: 3px !important;
}

@mixin button-style($bg-color, $text-color) {
  @include button-base;
  background: $bg-color !important;
  color: $text-color !important;
}

@mixin border-style($color) {
  border: 1px solid $color !important;
}

@mixin rang-style($color) {
  color: $color !important;
  border-color: $color !important;
}

@mixin award-icon($bg-image) {
  background: $bg-image transparent no-repeat 0 / 18px 18px !important;
  width: 18px !important;
  height: 18px !important;
}

// Functions
@function get-rang-color($rang) {
  @return map-get($rang-colors, $rang);
}

// Base Elements
%reset-base {
  @include reset-styles;

  &:focus {
    outline: none !important;
  }
}

%button-base {
  @include button-style($gray, $deepgray);

  &:hover {
    @include button-style($blue, $deepgray);
  }
}

%input-base {
  color: $white !important;
  @include border-style($gray);
}

// Global Styles
html,
body {
  background: $darkgray !important;
}

body {
  color: $white !important;
}

// Universal Reset
* {
  @extend %reset-base;
}

// Typography
h1,
h2,
h3,
h4,
h5,
h6 {
  color: $orange !important;
}

// Links
a {
  color: $blue !important;

  &:hover {
    color: $lightblue !important;
  }
}

// Form Elements
input {
  &[type="text"] {
    @extend %input-base;

    &.blur {
      color: $deepgray !important;
    }
  }

  &[type="radio"] {
    -webkit-appearance: none;
    appearance: none;
    background-color: $deepgray;
    margin: 0;
    width: 1.15em;
    height: 1.15em;
    border: 0.15em solid $gray;
    border-radius: 50% !important;
    transform: translateY(-0.075em) !important;
    display: inline-grid;
    place-content: center;

    &:checked {
      border-color: $orange;
    }

    &::before {
      content: "";
      width: 0.65em;
      height: 0.65em;
      border-radius: 50%;
      transform: scale(0);
      transition: 120ms transform ease-in-out;
      background-color: $orange;
    }

    &:checked::before {
      transform: scale(1);
    }
  }
}

select {
  min-height: 32px !important;
  background: $deepgray !important;
  color: $white !important;
  border: 1px solid $gray !important;
  border-radius: 5px !important;
  padding: 0 10px !important;
}

.search input[name="text"] {
  color: $white !important;
}

.form-control {
  background: $darkgray !important;
  @include border-style($gray);
  color: $white !important;
  outline: none !important;
}

textarea {
  @include border-style($gray);
  background-color: $darkgray !important;
  color: $white !important;
}

// Buttons
body .btn {
  @extend %button-base;
}

// Layout Components
.msg {
  background: $deepgray !important;
  @include border-style($blue);
  text-align: center !important;
}

blockquote {
  color: $blue !important;
  background: $deepgray !important;
  border: none !important;
}

// Border Elements
hr,
th,
tr,
td {
  border-color: $gray !important;
}

// Progress Components
#content .achieve .achieve-content .progress,
.fade .progress {
  background: $black !important;

  &-bar {
    background-color: $orange !important;
  }

  &-label {
    text-shadow: 0 0 2px darken($orange, 20%) !important;
    color: lighten($orange, 50%) !important;
  }
}

.next-level-label {
  color: $white !important;
}

// Scrollbar
::-webkit-scrollbar {
  width: 10px !important;
  background: $deepgray !important;

  &-track {
    @include border-style($deepgray);
    background-color: $darkgray !important;
  }

  &-thumb {
    background-color: $deepgray !important;
  }
}

// Profile Components
.profile-root {
  .empty {
    color: $red !important;
  }

  textarea {
    border: none !important;
  }
}

.modal2 textarea {
  border: none !important;
}

.resolve-failed {
  background: $darkgray !important;
  @include border-style($gray);
}

// Rang Colors - Generated with loops
@each $rang, $color in $rang-colors {
  .rang#{$rang},
  a.rang#{$rang},
  a.rang#{$rang}:visited {
    @include rang-style($color);
  }
}

// Awards - Generated with loops
.award {
  position: absolute !important;
  top: -4px !important;
  right: -6px !important;
  @include award-icon(none);
}

@each $class, $props in $awards {
  $image: nth($props, 1);
  $selector: nth($props, 2);

  .award#{$class},
  body .popup_profile a[style*="#{$selector}"] {
    @include award-icon($image);
  }
}

// Reformal Widget
#reformal_widget {
  @include reset-styles;
  filter: invert(0.95) brightness(1.2) grayscale(0.6) contrast(0.8)
    hue-rotate(-30deg) !important;
}

// Tooltips
body .tipsy {
  position: absolute !important;
  opacity: 0.9 !important;
  font: 12px Tahoma !important;

  &-inner {
    max-width: 400px !important;
    text-align: center !important;
    background-color: $blue;
    color: $deepgray !important;
    margin-left: 5px !important;
    margin-top: 2px !important;
  }

  &-arrow {
    display: none !important;
  }
}

// Google recaptcha
.g-recaptcha {
  filter: invert(1) hue-rotate(40deg) brightness(0.6) contrast(0.9) !important;
}
