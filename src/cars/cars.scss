@import "../data/variables";
@import "data/defaults";
@import "data/exclusive";
@import "mask";
@import "car-config";
@import "fix";

/* ===== STANDARD CARS ===== */
// Merge SVG car maps from defaults and exclusive
$svg-cars: map-merge($svg-cars-defaults, $svg-cars-exclusive);

// Dynamically generate car selectors and backgrounds from $svg-cars
@each $car-key, $svg in $svg-cars {
  // Use key as class name for both default and exclusive cars
  $class-name: $car-key;
  $size: get-car-config($car-key, size);

  .car .#{$class-name}:not(.car-tuning) {
    position: relative;
    &::before {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: map-get($processed-svg-cars, $car-key);
      background-repeat: no-repeat !important;
      background-size: #{$size} !important;
      pointer-events: none;
      z-index: 1;
    }

    // Apply shadow with automatic property fallback
    @include car-shadow($car-key);
  }
}

/* ===== CAR POSITION PRIORITIES ===== */
// Mixin for mask positions
@mixin mask-position($base-num) {
  .car .car-base_#{$base-num} {
    &::before {
      background-position: #{-100px * ($base-num + 1)} 0 !important;
      background-repeat: no-repeat !important;
      background-size: auto !important;
    }
  }
}

// Generate mask positions for car bases 0 to 5
@for $i from 0 through 5 {
  @include mask-position($i);
}