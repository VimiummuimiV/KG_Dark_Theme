@import "./data/variables";
@import "animations";

#toplist {
  font-family: "Montserrat", Verdana, Geneva, Tahoma, sans-serif;
  display: inline-flex !important;
  justify-content: center !important;
  gap: 10px !important;

  @media (max-width: 1100px) {
    flex-direction: column !important;
    align-items: center !important;
  }

  h3 {
    display: none !important;
  }

  .left-col,
  // Top list left menu parent navigating from vocabulary
  dt:first-child {
    order: 0 !important;
    float: none !important;
    display: flex !important;
    flex-direction: column !important;
    height: 100% !important;
    width: fit-content !important;
    margin: 0 !important;
    padding: 0 !important;
    position: sticky !important;
    top: 100px !important;

    h4 {
      color: $orange !important;
      font: 700 1.2em "Montserrat", sans-serif !important;
      text-transform: uppercase !important;
      padding: 2px 5px !important;
      margin: 15px 0 5px !important;
      border-radius: 3px !important;
      text-align: center !important;
      width: 220px !important;
    }

    ul.mode {
      display: flex !important;
      flex-direction: column !important;
      align-items: center !important;
      margin: 0 !important;

      /* --- YEARGROUP START --- */

      li.yeargroup {
        color: $orange !important;
        font: 700 1.1em "Montserrat", sans-serif !important;
        justify-content: center !important;

        &:hover:not(:has(a)) {
          color: $orange !important;
          background: transparent !important;
        }

        a {
          &:hover {
            color: lighten($gametype-voc, 20%) !important;
          }
        }
      }

      /* --- YEARGROUP END --- */

      li {
        left: 0 !important;
        position: relative !important;
        padding: 2px 5px !important;
        margin: 2px !important;
        width: 100% !important;
        display: flex !important;
        align-items: center !important;
        height: fit-content !important;
        min-height: 20px !important;
        border-radius: 8px !important;
        overflow: hidden !important;

        &:hover,
        &.active {
          color: lighten($lightblue, 20%) !important;
          background: darken($blue, 20%) !important;
        }

        span {
          padding: 0 !important;
          padding: 2px 5px !important;
          background: transparent !important;
        }

        a {
          position: absolute !important;
          display: inline-flex !important;
          align-items: center !important;
          top: 0 !important;
          bottom: 0 !important;
          left: 10px;
          right: 0;
          z-index: 1 !important;
          text-decoration: none !important;

          img {
            visibility: hidden !important;
            height: 100% !important;
            width: 25px !important;
            top: 0 !important;
          }

          &:hover {
            color: lighten($lightblue, 20%) !important;
          }
        }

        a.gametype-voc {
          left: 25px !important;
          padding-left: 5px !important;
          white-space: nowrap !important;
          overflow: hidden !important;
        }

        &.gametype-voc {
          position: relative !important;

          span {
            margin: 0 0 0 25px !important;
          }

          &::before {
            content: "" !important;
            position: absolute !important;
            top: 0 !important;
            left: 0 !important;
            display: inline-flex !important;
            width: 24px !important;
            height: 100% !important;
            background: icon("book", $lightblue) no-repeat center / 16px !important;
          }
        }
      }

      // Create a map of all gametypes (using existing variables from variables.scss)
      $gametypes: (
        "normal": $gametype-normal,
        "quote": $gametype-quote,
        "sprint": $gametype-sprint,
        "marathon": $gametype-marathon,
        "noerror": $gametype-noerror,
        "noerrorcnt": $gametype-noerrorcnt,
        "abra": $gametype-abra,
        "abra-premium": $gametype-abra-premium,
        "digits": $gametype-digits,
        "referats": $gametype-referats,
        "voc": $gametype-voc,
        "chars": $gametype-chars,
        "qual": $gametype-qual,
      );

      // Generate styles for all gametypes dynamically
      @each $name, $color in $gametypes {
        li:has(.gametype-#{$name}) {
          border: 2px solid transparent !important;

          &.active,
          &:hover {
            border-color: darken($color, 10%) !important;
            background: color-mix(
              in srgb,
              $color 30%,
              $darkgray 70%
            ) !important;
          }

          a,
          span {
            color: lighten($color, 20%) !important;
          }
        }
      }
    }
  }

  .content-col,
  // Top list table parent navigating from vocabulary
  dd {
    background: $darkgray !important;
    display: flex !important;
    flex-direction: column !important;
    align-items: center !important;
    order: 1 !important;
    margin: 0 !important;
    padding: 0 10px !important;
    width: fit-content !important;

    .search-position {
      width: 100% !important;

      .search-self {
        background: $deepgray icon("mapPin", $lightblue) no-repeat center / 24px !important;
        border-radius: 5px !important;
        border: 1px solid $gray !important;
        width: 60px !important;
        height: auto !important;
        padding: 0 !important;
        margin-right: 10px !important;
        transition: background 0.15s ease !important;
        cursor: pointer !important;

        &:hover {
          background: $black icon("mapPin", $lightblue) no-repeat center / 24px !important;
          border-color: $lightblue !important;
        }

        a {
          font-size: 0 !important;
          display: inline-flex !important;
          height: 100% !important;
          width: 100% !important;
        }
      }
    }

    table {
      width: 100% !important;

      tbody {
        display: flex !important;
        flex-direction: column !important;

        tr {
          background-color: darken($darkgray, 2%) !important;
          border: 1px solid darken($gray, 15%) !important;
          border-radius: 5px !important;
          margin: 5px 0 !important;
          padding: 5px !important;
          height: 70px !important;
          position: relative !important;

          .offset_up,
          .offset_down {
            position: absolute !important;
            top: 0 !important;
            right: 10px !important;
            width: 50px !important;
            justify-content: center !important;
            font-weight: 700 !important;
            font-size: 1.1em !important;
          }

          .offset_up {
            color: $green !important;
          }

          .offset_down {
            color: $red !important;
          }

          .pos {
            width: 50px !important;
            justify-content: center !important;
          }

          th.name {
            margin-right: 120px !important;
          }

          .name {
            width: 220px !important;
            background-position: left center !important;
            background-size: 32px !important;

            a {
              border: none !important;
            }
          }

          .name[style*="avatars/"] {
            position: relative !important;

            &::before {
              @include avatar-mask(32px, $darkgray);
              filter: brightness(0.88) !important;
            }

            a {
              padding-left: 40px !important;
            }
          }

          .car {
            margin-right: 15px !important;

            .img {
              &::before {
                filter: brightness(0.88) !important;
              }
            }

            .numbers {
              bottom: 5px !important;
              right: calc(100% + 5px) !important;
            }
          }

          .highlight {
            margin-right: 15px !important;
            min-width: 140px !important;

            + td,
            + td + td,
            + th,
            + th + th {
              min-width: 90px !important;
              margin-right: 15px !important;
            }
          }

          th:not(.offset) {
            padding: 0 !important;
          }

          th,
          td {
            display: inline-flex !important;
            flex-direction: row !important;
            justify-content: start !important;
            align-items: center !important;
            width: fit-content !important;
            background-color: darken($darkgray, 2%) !important;
            border: none !important;
            height: 100% !important;
            margin: 0 !important;
            padding: 0 !important;
          }

          td {
            strong,
            b {
              color: $lightblue !important;
              margin-right: 5px !important;
            }
          }
        }
      }
    }
  }

  .right-col {
    order: 2 !important;
    float: none !important;
    display: flex !important;
    flex-direction: column !important;
    margin: 0 !important;
    padding: 0 !important;
    position: fixed !important;
    top: 50% !important;
    right: 0 !important;
    transform: translateY(-50%) !important;
    width: 50px !important;
    height: 50px !important;
    z-index: 10 !important;
    cursor: pointer !important;

    // Fade-in animation
    opacity: 0;
    animation: fadeIn 2s ease-in-out 0s 1 forwards !important;

    .info {
      position: absolute !important;
      background: $black icon("info", $lightblue) no-repeat 10px center / 32px !important;
      width: 500px !important; // Set to final expanded width
      height: 50px !important; // Set to final expanded height
      overflow: hidden !important;
      border-radius: 5px !important;
      right: 0 !important;
      top: 50% !important;
      transform: translateY(-50%) translateX(calc(100% - 50px)) !important; // Hide most of it off-screen
      transition: transform 0.3s ease !important; // Move transition to base state

      p {
        opacity: 0 !important;
        transition: opacity 0.3s ease !important;
      }

      &:hover {
        height: fit-content !important; // Expand to fit content
        transform: translateY(-50%) translateX(0) !important; // Slide it fully into view
        background: $black !important;

        p {
          opacity: 1 !important;
        }
      }
    }
  }
}
