// Dynamic Score Icon Component
// Usage: @include score-icon($score-level, $size);

@mixin score-icon(
  $score-level: 1,
  $size: 40px
) {
  width: $size !important;
  height: $size !important;
  
  // Active (highlighted) segments are $yellow, inactive are $orange
  $active-color: $yellow;
  $inactive-color: $orange;
  
  background: url("data:image/svg+xml,#{generate-score-svg($score-level, $size, $active-color, $inactive-color)}") !important;
  background-repeat: no-repeat !important;
  background-position: center !important;
  background-size: contain !important;
}

// Function to generate the SVG with dynamic colors
@function generate-score-svg(
  $score-level,
  $size,
  $active-color,
  $inactive-color
) {
  // Convert size to unitless number for SVG
  $svg-size: if(unit($size) == 'px', $size / 1px, $size);
  
  // Properly encode colors for SVG
  $active-encoded: url-encode-color($active-color);
  $inactive-encoded: url-encode-color($inactive-color);
  
  // Build SVG string
  $svg: "%3Csvg xmlns='http://www.w3.org/2000/svg' width='#{$svg-size}' height='#{$svg-size}' viewBox='0 0 45 45'%3E";
  
  // Add group start
  $svg: $svg + "%3Cg id='score-progress'%3E";
  
  // Generate paths for all 11 segments
  @for $i from 1 through 11 {
    $fill: if($i <= $score-level, $active-encoded, $inactive-encoded);
    $path-data: get-path-data($i);
    $svg: $svg + "%3Cpath fill='#{$fill}' d='#{$path-data}'/%3E";
  }
  
  // Close group and SVG
  $svg: $svg + "%3C/g%3E%3C/svg%3E";
  
  @return $svg;
}

// Function to get path data for each segment
@function get-path-data($segment) {
  $paths: (
    1: "M29.37,2.37c-2.13,-0.76,-4.28,-1.18,-6.54,-1.26c-0.46,-0.02,-0.83,0.34,-0.83,0.8l0,2.21c0,0.43,0.34,0.78,0.77,0.8c1.81,0.07,3.54,0.42,5.25,1.02c0.41,0.14,0.85,-0.07,1.01,-0.47l0.81,-2.06c0.17,-0.42,-0.04,-0.89,-0.47,-1.04z",
    2: "M39.36,9.64c-1.4,-1.8,-2.95,-3.29,-4.82,-4.6c-0.37,-0.26,-0.88,-0.16,-1.13,0.22l-1.19,1.87c-0.23,0.36,-0.14,0.83,0.21,1.08c1.49,1.05,2.75,2.27,3.87,3.7c0.26,0.34,0.75,0.41,1.09,0.16l1.8,-1.3c0.37,-0.26,0.44,-0.78,0.17,-1.13z",
    3: "M43.83,21.16c-0.18,-2.18,-0.71,-4.47,-1.55,-6.49c-0.18,-0.42,-0.67,-0.61,-1.08,-0.42l-2.01,0.93c-0.39,0.18,-0.57,0.63,-0.41,1.03c0.67,1.64,1.09,3.43,1.25,5.2c0.03,0.43,0.4,0.75,0.83,0.73l2.21,-0.12c0.46,-0.02,0.8,-0.41,0.76,-0.86z",
    4: "M41.35,33.26c1.06,-1.99,1.8,-4.07,2.2,-6.29c0.08,-0.45,-0.22,-0.88,-0.68,-0.94l-2.2,-0.3c-0.42,-0.06,-0.81,0.22,-0.89,0.64c-0.35,1.81,-0.9,3.41,-1.76,5.04c-0.2,0.38,-0.06,0.85,0.31,1.07l1.92,1.1c0.39,0.23,0.89,0.09,1.1,-0.32z",
    5: "M32.72,42.11c1.97,-1.11,3.69,-2.48,5.24,-4.11c0.32,-0.33,0.29,-0.85,-0.05,-1.15l-1.67,-1.45c-0.32,-0.28,-0.81,-0.26,-1.11,0.05c-1.21,1.29,-2.67,2.42,-4.21,3.3c-0.37,0.21,-0.51,0.68,-0.32,1.06l1.02,1.97c0.21,0.4,0.71,0.55,1.1,0.33z",
    6: "M20.69,44.85c2.3,0.12,4.39,-0.03,6.63,-0.59c0.44,-0.11,0.7,-0.56,0.57,-1l-0.63,-2.13c-0.12,-0.41,-0.54,-0.65,-0.96,-0.55c-1.79,0.45,-3.48,0.56,-5.33,0.47c-0.42,-0.02,-0.79,0.30,-0.83,0.73l-0.21,2.2c-0.04,0.46,0.30,0.85,0.76,0.87z",
    7: "M9.05,40.67c1.82,1.34,3.78,2.34,5.91,3.08c0.44,0.14,0.9,-0.09,1.03,-0.53l0.63,-2.13c0.12,-0.41,-0.11,-0.84,-0.51,-0.98c-1.69,-0.58,-3.29,-1.41,-4.74,-2.46c-0.35,-0.26,-0.83,-0.19,-1.1,0.15l-1.37,1.73c-0.29,0.36,-0.22,0.87,0.15,1.14z",
    8: "M1.54,30.86c0.77,2.02,1.97,4.09,3.32,5.79c0.28,0.35,0.8,0.4,1.15,0.1l1.67,-1.45c0.32,-0.28,0.37,-0.77,0.1,-1.1c-1.08,-1.37,-2.03,-3.02,-2.65,-4.64c-0.16,-0.4,-0.6,-0.61,-1.01,-0.47l-2.09,0.73c-0.43,0.15,-0.65,0.61,-0.49,1.04z",
    9: "M0.55,18.55c-0.44,2.22,-0.58,4.39,-0.35,6.64c0.04,0.46,0.45,0.78,0.9,0.71l2.2,-0.3c0.42,-0.06,0.73,-0.44,0.68,-0.87c-0.18,-1.8,-0.05,-3.58,0.30,-5.35c0.08,-0.42,-0.19,-0.83,-0.6,-0.93l-2.15,-0.52c-0.45,-0.11,-0.89,0.17,-0.98,0.62z",
    10: "M6.38,7.65c-1.57,1.62,-2.89,3.39,-3.91,5.4c-0.2,0.41,-0.03,0.9,0.38,1.09l2.02,0.92c0.39,0.18,0.85,0.03,1.04,-0.36c0.85,-1.63,1.87,-3.01,3.14,-4.33c0.3,-0.31,0.3,-0.8,0.01,-1.11l-1.53,-1.6c-0.31,-0.33,-0.84,-0.33,-1.15,-0.01z",
    11: "M17.18,1.63c-2.28,0.51,-4.18,1.29,-6.2,2.45c-0.4,0.22,-0.52,0.74,-0.28,1.12l1.19,1.85c0.23,0.36,0.7,0.48,1.07,0.26c1.54,-0.9,3.24,-1.54,4.98,-1.94c0.41,-0.1,0.68,-0.5,0.6,-0.92l-0.4,-2.19c-0.08,-0.45,-0.52,-0.73,-0.96,-0.63z"
  );
  
  @return map-get($paths, $segment);
}

// Helper function to properly encode colors for SVG
@function url-encode-color($color) {
  $color-string: inspect($color);
  $color-string: str-replace($color-string, "#", "%23");
  $color-string: str-replace($color-string, " ", "");
  @return $color-string;
}

// Helper function to replace strings
@function str-replace($string, $search, $replace: '') {
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }
  @return $string;
}

// Helper mixin for score level styles
@mixin score-level-style($score-level, $size: 40px) {
  display: block !important;
  box-sizing: border-box !important;
  @include score-icon($score-level, $size);
  position: relative !important;
}
